<UserControl x:Class="Zhichkin.Integrator.Views.PublisherView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Zhichkin.Integrator.Views"
             xmlns:p="http://www.codeplex.com/CompositeWPF"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Информационная база:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left" />
        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding InfoBase}" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Наименование:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left" />
        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Name}" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Основная таблица:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding MainTable}" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        <TextBlock Grid.Row="3" Grid.Column="0" Text="Регистрация изменений:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding IsChangeTrackingEnabled, Mode=TwoWay}" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        <TextBlock Grid.Row="4" Grid.Column="0" Text="Отслеживать изменения полей:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"
                   Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <CheckBox Grid.Row="4" Grid.Column="1" IsChecked="{Binding IsColumnsTrackingEnabled, Mode=TwoWay}" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"
                  Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        
        <TextBlock Grid.Row="5" Grid.Column="0" Text="Актуальная версия изменений:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"
                   Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <TextBox Text="{Binding LastSyncVersion, Mode=TwoWay}" Width="50" Margin="10" TextAlignment="Right"
                     Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBox.InputBindings>
                    <KeyBinding Gesture="Enter"
                            Command="{Binding UpdateTextBoxSourceCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Content="Количество изменений" Margin="10"
                    Command="{Binding CountChangesCommand}"
                    Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.ToolTip>
                    <TextBlock>
                    Вычисляет текущее количество изменений данного объекта,
                    <LineBreak/>
                    которое ожидает своей публикации в очередь сообщений.
                    </TextBlock>
                </Button.ToolTip>
            </Button>
        </StackPanel>

        <TextBlock Grid.Row="6" Grid.Column="0" Text="Очередь сообщений MSMQ:" FontWeight="DemiBold" Margin="10" VerticalAlignment="Center" HorizontalAlignment="Left"
                   Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <TextBox Text="{Binding MSMQTargetQueue, Mode=TwoWay}" Margin="10" MinWidth="100"
                     Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBox.InputBindings>
                    <KeyBinding Gesture="Enter"
                            Command="{Binding UpdateTextBoxSourceCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TextBox}}}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Content="Тест!" Margin="10" Width="50"
                    Command="{Binding QueueTestCommand}"
                    Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.ToolTip>
                    <TextBlock>
                    Отправляет и принимает тестовое сообщение в/из очереди.
                    <LineBreak/>
                    Если очередь ещё не создана, то она создаётся автоматически.
                    </TextBlock>
                </Button.ToolTip>
            </Button>
        </StackPanel>

        <ContentControl Grid.Row="7" Grid.ColumnSpan="2" Content="{Binding Path=SubscriptionsListView}" Margin="10"
                        Visibility="{Binding IsChangeTrackingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>
