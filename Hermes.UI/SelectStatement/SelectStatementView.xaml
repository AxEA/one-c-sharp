<UserControl x:Class="Zhichkin.Hermes.UI.SelectStatementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:Zhichkin.Hermes.UI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             AllowDrop="True" DragEnter="View_DragEnter" DragLeave="View_DragLeave" Drop="View_Drop">

    <UserControl.Resources>
        <ui:OrientationEnumConverter x:Key="OrientationEnumConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <Expander Name="Expander_SELECT" ExpandDirection="Down" IsExpanded="True">
        <Expander.Header>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="SELECT" FontWeight="Bold" VerticalAlignment="Center"/>
                <Border BorderThickness="1" Margin="5,0,0,0">
                    <Border.BorderBrush>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Rectangle StrokeDashArray="2 2" Stroke="Gray" StrokeThickness="1"
                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Border.BorderBrush>
                    <TextBox Text="{Binding Alias}" VerticalContentAlignment="Center" BorderThickness="0"/>
                </Border>
                <Button Content="+" Command="{Binding AddPropertyCommand}" Margin="5,0,0,0" VerticalContentAlignment="Center" /> 
            </StackPanel>
        </Expander.Header>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ItemsControl Grid.Row="0" ItemsSource="{Binding Fields}" Margin="30,0,0,0">
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type ui:PropertyExpressionViewModel}">
                            <ui:PropertyExpressionView Margin="0,0,0,5"/>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>

                <!--<DataGrid ItemsSource="{Binding Fields}" Grid.Row="0" Margin="30,0,0,0" Height="Auto" SelectedItem="{Binding SelectedItem}"
                          AutoGenerateColumns="False" CanUserResizeColumns="True" CanUserAddRows="False" HeadersVisibility="Column">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Alias" FontWeight="DemiBold" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Alias}" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Name" FontWeight="DemiBold" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Use" FontWeight="DemiBold" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsUsed, Mode=TwoWay}" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Function" FontWeight="DemiBold" Margin="5" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ui:CaseWhenThenView />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>-->

                <Expander Grid.Row="1" Name="Expander_FROM" ExpandDirection="Down" IsExpanded="True">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="FROM" FontWeight="Bold" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding FromClauseDescription}" Margin="5,0,0,0" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=Expander_FROM, Path=IsExpanded}" Value="True">
                                                <Setter Property="TextBlock.Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=Expander_FROM, Path=IsExpanded}" Value="False">
                                                <Setter Property="TextBlock.Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Expander.Header>
                    <ScrollViewer Margin="30,0,0,0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding Tables}">
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="FrameworkElement.Margin" Value="5"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="{Binding IsFromVertical, Converter={StaticResource OrientationEnumConverter}}"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Resources>
                                <DataTemplate DataType="{x:Type ui:TableExpressionViewModel}">
                                    <ui:TableExpressionView />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type ui:SelectStatementViewModel}">
                                    <ui:SelectStatementView />
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type ui:JoinExpressionViewModel}">
                                    <ui:JoinView />
                                </DataTemplate>
                            </ItemsControl.Resources>
                        </ItemsControl>
                    </ScrollViewer>
                </Expander>

                <ui:BooleanExpressionView Grid.Row="2" DataContext="{Binding WhereClause}"/>

            </Grid>
        </ScrollViewer>
    </Expander>
</UserControl>
